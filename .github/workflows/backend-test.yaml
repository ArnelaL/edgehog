#
# This file is part of Edgehog.
#
# Copyright 2021-2023 SECO Mind Srl
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0
#

name: Build and Test Backend

on:
  # Run when pushing to stable branches
  push:
    paths:
    - 'backend/**'
    - '.tool-versions'
    - '.github/workflows/backend-test.yaml'
    branches:
    - 'main'
  # Run on pull requests matching apps
  pull_request:
    paths:
    - 'backend/**'
    - '.tool-versions'
    - '.github/workflows/backend-test.yaml'

jobs:
  test-dialyzer:
    name: Check Dialyzer
    runs-on: ubuntu-22.04
    env:
      MIX_ENV: ci
    steps:
    - uses: actions/checkout@v3

    - uses: erlef/setup-beam@v1.15
      id: beam
      with:
        version-file: .tool-versions
        version-type: strict

    - uses: actions/cache@v3
      with:
        path: backend/deps
        key: |
          ${{ runner.os }}-dialyzer-mix-${{ steps.beam.outputs.otp-version }}-${{ steps.beam.outputs.elixir-version }}-${{ hashFiles(format('{0}{1}', github.workspace, '/backend/mix.lock')) }}
        restore-keys: |
          ${{ runner.os }}-dialyzer-mix-${{ steps.beam.outputs.otp-version }}-${{ steps.beam.outputs.elixir-version }}-
    - uses: actions/cache@v3
      with:
        path: backend/_build
        key: |
          ${{ runner.os }}-dialyzer-_build-${{ steps.beam.outputs.otp-version }}-${{ steps.beam.outputs.elixir-version }}-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-dialyzer-_build-${{ steps.beam.outputs.otp-version }}-${{ steps.beam.outputs.elixir-version }}-

    - name: Install Dependencies
      working-directory: ./backend
      run: mix deps.get

    # Don't cache PLTs based on mix.lock hash, as Dialyzer can incrementally update even old ones
    # Cache key based on Elixir & Erlang version (also useful when running in matrix)
    - name: Restore PLT cache
      uses: actions/cache@v3
      id: plt_cache
      with:
        path: backend/priv/plts
        key: |
          ${{ runner.os }}-dialyzer-plt-${{ steps.beam.outputs.otp-version }}-${{ steps.beam.outputs.elixir-version }}
        restore-keys: |
          ${{ runner.os }}-dialyzer-plt-${{ steps.beam.outputs.otp-version }}-${{ steps.beam.outputs.elixir-version }}

    # Create PLTs if no cache was found
    - name: Create PLTs
      working-directory: ./backend
      if: steps.plt_cache.outputs.cache-hit != 'true'
      run: mkdir -p priv/plts && mix dialyzer --plt

    - name: Run dialyzer
      working-directory: ./backend
      run: mix dialyzer

  test-coverage:
    name: Build and Test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_PASSWORD: postgres
        ports:
        - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      MIX_ENV: test
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
    - uses: actions/checkout@v3
    - uses: erlef/setup-beam@v1.15
      id: beam
      with:
        version-file: .tool-versions
        version-type: strict
    - uses: actions/cache@v3
      with:
        path: backend/deps
        key: ${{ runner.os }}-deps-${{ steps.beam.outputs.otp-version }}-${{ steps.beam.outputs.elixir-version }}-${{ hashFiles(format('{0}{1}{2}', github.workspace, '/backend/', '/mix.lock')) }}
    - uses: actions/cache@v3
      with:
        path: backend/_build
        key: ${{ runner.os }}-_build-${{ steps.beam.outputs.otp-version }}-${{ steps.beam.outputs.elixir-version }}
    - name: Install Dependencies
      working-directory: backend
      run: mix deps.get
    - name: Check formatting
      working-directory: backend
      run: mix format --check-formatted
    - name: Run Credo code analysis
      working-directory: backend
      run: mix credo
    - name: Compile
      working-directory: backend
      run: mix do compile
    - name: Test
      working-directory: backend
      run: mix coveralls.github --exclude wip -o coverage_results
