#
# This file is part of Edgehog.
#
# Copyright 2021 SECO Mind Srl
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0
#

version: "3.8"
services:
  postgresql:
    image: postgres:14.0
    environment:
      POSTGRES_USER: edgehog
      POSTGRES_PASSWORD: edgehog
    volumes:
      - postgresql-data:/var/lib/postgresql/data

  edgehog-backend:
    image: edgehogdevicemanager/edgehog-backend:snapshot
    build:
      context: backend
    environment:
      DATABASE_USERNAME: edgehog
      DATABASE_PASSWORD: edgehog
      DATABASE_HOSTNAME: postgresql
      DATABASE_NAME: postgres
      SECRET_KEY_BASE: KKtB6BEPk1NVk6EmBfQCafphxLj7EW1M+BGPIFCT8X2LTywTFuGC6lM3yc8e3VKH
      IPBASE_API_KEY: ${IPBASE_API_KEY:-}
      GOOGLE_GEOLOCATION_API_KEY: ${GOOGLE_GEOLOCATION_API_KEY:-}
      GOOGLE_GEOCODING_API_KEY: ${GOOGLE_GEOCODING_API_KEY:-}
      S3_ACCESS_KEY_ID: "${S3_ACCESS_KEY_ID:-minioadmin}"
      S3_SECRET_ACCESS_KEY: "${S3_SECRET_ACCESS_KEY:-minioadmin}"
      S3_REGION: "${S3_REGION:-local}"
      S3_SCHEME: "${S3_SCHEME:-http://}"
      S3_HOST: "${S3_HOST:-minio}"
      S3_PORT: "${S3_PORT:-9000}"
      S3_BUCKET: "${S3_BUCKET:-edgehog}"
      S3_ASSET_HOST: "${S3_ASSET_HOST:-http://localhost:9000/edgehog}"
      S3_GCP_CREDENTIALS: "${S3_GCP_CREDENTIALS:-}"
    ports:
      - 4000:4000
    restart: on-failure
    depends_on:
      - postgresql
      - minio
      - minio-init

  edgehog-frontend:
    image: edgehogdevicemanager/edgehog-frontend:snapshot
    build:
      context: frontend
    environment:
      BACKEND_URL: http://localhost:4000/
    ports:
      - 8080:80
    restart: on-failure

  minio:
    image: minio/minio:RELEASE.2023-01-18T04-36-38Z
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - "minio-data-v2:/data"
    environment:
      MINIO_ROOT_USER: "minioadmin"
      MINIO_ROOT_PASSWORD: "minioadmin"
    command: server --console-address ":9001" /data

  minio-init:
    image: minio/mc:RELEASE.2023-01-11T03-14-16Z
    depends_on:
      - minio
    entrypoint: |
      /bin/sh -c "
      while ! curl -s http://minio:9000 >/dev/null; do sleep 0.1; done;
      /usr/bin/mc alias set minio http://minio:9000 minioadmin minioadmin;
      /usr/bin/mc mb minio/edgehog;
      /usr/bin/mc anonymous set download minio/edgehog;
      exit 0;
      "

volumes:
  postgresql-data:
  minio-data-v2:
    driver: local

networks:
  default:
    name: astarte
